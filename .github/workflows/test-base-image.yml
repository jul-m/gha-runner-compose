name: Test Base Image

on:
  workflow_dispatch:

jobs:
  build-and-start-runner:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build base image (with cache)
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          target: base
          tags: gha-runner-base:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify image was built
        run: |  # shell
          docker image ls gha-runner-base:test
          docker image inspect gha-runner-base:test --format='{{json .}}' | jq '.RepoTags, .Size'

      - name: Start runner container
        env:
          GH_TOKEN: ${{ secrets.ACTION_GH_TOKEN }}
        run: |  # shell
          # Get runner registration token
          TOKEN=$(gh api --method POST "repos/${{ github.repository }}/actions/runners/registration-token" --jq .token)

          # Start runner container in background
          docker run -d --name test-runner \
            -e RUNNER_REPO_URL="${{ github.server_url }}/${{ github.repository }}" \
            -e RUNNER_TOKEN="$TOKEN" \
            -e RUNNER_NAME="test-runner-${{ github.run_id }}" \
            -e RUNNER_LABELS="test-base,test-runner-${{ github.run_id }}" \
            gha-runner-base:test
        continue-on-error: true

      - name: Wait for runner registration and execution
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |  # shell
          # Wait for runner to register (check logs for success)
          timeout 60 bash -c '
          until docker logs test-runner 2>&1 | grep -q "Runner registered successfully"; do
            sleep 5
          done
          '
          
          # Wait for test-basic-job to complete successfully
          echo "Waiting for test-basic-job to complete..."
          timeout 300 bash -c '
          while true; do
            JOB_STATUS=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              "https://api.github.com/repos/$GITHUB_REPOSITORY/actions/runs/${{ github.run_id }}/jobs" | \
              jq -r ".jobs[] | select(.name == \"test-basic-job\") | .conclusion")
            if [ "$JOB_STATUS" = "success" ]; then
              echo "test-basic-job completed successfully."
              break
            elif [ "$JOB_STATUS" = "failure" ] || [ "$JOB_STATUS" = "cancelled" ] || [ "$JOB_STATUS" = "timed_out" ]; then
              echo "test-basic-job failed with status: $JOB_STATUS"
              exit 1
            fi
            sleep 10
          done
          '

      - name: Cleanup runner
        if: always()
        env:
          GH_TOKEN: ${{ secrets.ACTION_GH_TOKEN }}
        run: |  # shell
          # Cleanup runner
          docker stop test-runner || true
          docker rm test-runner || true

          # Try to unregister runner if it was registered
          # Note: This requires GITHUB_TOKEN to have admin permissions (set via PAT in secrets)
          RUNNER_ID=$(gh api "repos/${{ github.repository }}/actions/runners" \
            --jq ".runners[] | select(.name == \"test-runner-${{ github.run_id }}\") | .id" 2>/dev/null || echo "")
          
          if [ -n "$RUNNER_ID" ]; then
            echo "Removing runner with ID: $RUNNER_ID"
            gh api --method DELETE "repos/${{ github.repository }}/actions/runners/$RUNNER_ID" 2>/dev/null || true
          else
            echo "Runner not found or not registered (expected if PAT not configured)."
          fi

  test-basic-job:
    runs-on: 'test-runner-${{ github.run_id }}'
    steps:
      - name: Run basic test
        run: |  # shell
          # Basic job test
          echo "Hello from self-hosted runner!"
          echo "Runner is working correctly."
          uname -a